{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Tasks",
      "description": "API for tasks"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create new task",
        "description": "Create new task",
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task that we want to create",
            "schema": {
              "type": "object",
              "required": ["user_id"],
              "properties": {
                "user_id": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sheduled_date": {
                  "type": "string",
                  "example": "2020-01-01"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New task is created",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of task that we want to find",
          "type": "integer"
        }
      ],
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task with given ID",
        "responses": {
          "200": {
            "description": "Task is found",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete task with given ID",
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "description": "Task is deleted",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "put": {
        "summary": "Update task with give ID",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task with new values of properties",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task is updated",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create new user",
        "description": "Create new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of task that we want to find",
          "type": "integer"
        }
      ],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "Task is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Task is deleted",
            "schema": {
               "status": "ok",
                "desc": "User id=# deleted"
            }
          }
        }
      },
      "put": {
        "summary": "Update task with give ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Task with new values of properties",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task is updated",
            "schema": {
              "success": "true"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "required": ["text"],
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "user_id": {
          "type": "integer",
          "uniqueItems": false
        },
        "title": {
          "type": "string",
          "uniqueItems": false
        },
        "description": {
          "type": "string",
          "uniqueItems": false
        },
        "sheduled_date": {
          "type": "string",
          "uniqueItems": false
        },
        "createdAt": {
          "type": "string",
          "uniqueItems": false
        },
        "updatedAt": {
          "type": "string",
          "uniqueItems": false
        }
      }
    },
    "User": {
      "required": ["text"],
      "properties": {
        "user_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "uniqueItems": false
        },
        "tasks" : {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "createdAt": {
          "type": "string",
          "uniqueItems": false
        },
        "updatedAt": {
          "type": "string",
          "uniqueItems": false
        }
      }
    },
    "Tasks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Task"
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    }
  }
}
